"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/line-webhook/route";
exports.ids = ["app/api/line-webhook/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "node:process":
/*!*******************************!*\
  !*** external "node:process" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("node:process");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:stream");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fline-webhook%2Froute&page=%2Fapi%2Fline-webhook%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fline-webhook%2Froute.ts&appDir=D%3A%5Cfame%5Cnon-project%5Cline-bot-mcp-server%5Cui-next%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Cfame%5Cnon-project%5Cline-bot-mcp-server%5Cui-next&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fline-webhook%2Froute&page=%2Fapi%2Fline-webhook%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fline-webhook%2Froute.ts&appDir=D%3A%5Cfame%5Cnon-project%5Cline-bot-mcp-server%5Cui-next%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Cfame%5Cnon-project%5Cline-bot-mcp-server%5Cui-next&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var D_fame_non_project_line_bot_mcp_server_ui_next_app_api_line_webhook_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/line-webhook/route.ts */ \"(rsc)/./app/api/line-webhook/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/line-webhook/route\",\n        pathname: \"/api/line-webhook\",\n        filename: \"route\",\n        bundlePath: \"app/api/line-webhook/route\"\n    },\n    resolvedPagePath: \"D:\\\\fame\\\\non-project\\\\line-bot-mcp-server\\\\ui-next\\\\app\\\\api\\\\line-webhook\\\\route.ts\",\n    nextConfigOutput,\n    userland: D_fame_non_project_line_bot_mcp_server_ui_next_app_api_line_webhook_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/line-webhook/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZsaW5lLXdlYmhvb2slMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmxpbmUtd2ViaG9vayUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmxpbmUtd2ViaG9vayUyRnJvdXRlLnRzJmFwcERpcj1EJTNBJTVDZmFtZSU1Q25vbi1wcm9qZWN0JTVDbGluZS1ib3QtbWNwLXNlcnZlciU1Q3VpLW5leHQlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUQlM0ElNUNmYW1lJTVDbm9uLXByb2plY3QlNUNsaW5lLWJvdC1tY3Atc2VydmVyJTVDdWktbmV4dCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD1zdGFuZGFsb25lJnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ3FDO0FBQ2xIO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGluZS1ib3QtbWNwLXVpLz8yMTZjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkQ6XFxcXGZhbWVcXFxcbm9uLXByb2plY3RcXFxcbGluZS1ib3QtbWNwLXNlcnZlclxcXFx1aS1uZXh0XFxcXGFwcFxcXFxhcGlcXFxcbGluZS13ZWJob29rXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcInN0YW5kYWxvbmVcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvbGluZS13ZWJob29rL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvbGluZS13ZWJob29rXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9saW5lLXdlYmhvb2svcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJEOlxcXFxmYW1lXFxcXG5vbi1wcm9qZWN0XFxcXGxpbmUtYm90LW1jcC1zZXJ2ZXJcXFxcdWktbmV4dFxcXFxhcHBcXFxcYXBpXFxcXGxpbmUtd2ViaG9va1xcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvbGluZS13ZWJob29rL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fline-webhook%2Froute&page=%2Fapi%2Fline-webhook%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fline-webhook%2Froute.ts&appDir=D%3A%5Cfame%5Cnon-project%5Cline-bot-mcp-server%5Cui-next%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Cfame%5Cnon-project%5Cline-bot-mcp-server%5Cui-next&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/line-webhook/route.ts":
/*!***************************************!*\
  !*** ./app/api/line-webhook/route.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   dynamic: () => (/* binding */ dynamic),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _modelcontextprotocol_sdk_client_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @modelcontextprotocol/sdk/client/index.js */ \"(rsc)/../node_modules/@modelcontextprotocol/sdk/dist/esm/client/index.js\");\n/* harmony import */ var _modelcontextprotocol_sdk_client_stdio_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @modelcontextprotocol/sdk/client/stdio.js */ \"(rsc)/../node_modules/@modelcontextprotocol/sdk/dist/esm/client/stdio.js\");\nconst runtime = \"nodejs\";\nconst dynamic = \"force-dynamic\";\n\n\n\n\n\nfunction loadParentEnvOnce() {\n    try {\n        const loadedFlag = globalThis.__parentEnvLoaded;\n        if (loadedFlag) return;\n        const parentEnv = path__WEBPACK_IMPORTED_MODULE_2___default().resolve(process.cwd(), \"..\", \".env\");\n        if (fs__WEBPACK_IMPORTED_MODULE_1___default().existsSync(parentEnv)) {\n            const text = fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(parentEnv, \"utf8\");\n            for (const line of text.split(/\\r?\\n/)){\n                if (!line || line.trim().startsWith(\"#\")) continue;\n                const idx = line.indexOf(\"=\");\n                if (idx <= 0) continue;\n                const key = line.slice(0, idx).trim();\n                let val = line.slice(idx + 1).trim();\n                if (val.startsWith('\"') && val.endsWith('\"') || val.startsWith(\"'\") && val.endsWith(\"'\")) {\n                    val = val.slice(1, -1);\n                }\n                if (!process.env[key]) process.env[key] = val;\n            }\n        }\n        globalThis.__parentEnvLoaded = true;\n    } catch  {\n    // ignore\n    }\n}\nloadParentEnvOnce();\nasync function getClient() {\n    if (globalThis.__mcpClientWebhook) return globalThis.__mcpClientWebhook;\n    const projectRoot = path__WEBPACK_IMPORTED_MODULE_2___default().resolve(process.cwd(), \"..\");\n    const transport = new _modelcontextprotocol_sdk_client_stdio_js__WEBPACK_IMPORTED_MODULE_4__.StdioClientTransport({\n        command: \"node\",\n        args: [\n            \"dist/index.js\"\n        ],\n        cwd: projectRoot,\n        env: process.env\n    });\n    const client = new _modelcontextprotocol_sdk_client_index_js__WEBPACK_IMPORTED_MODULE_3__.Client({\n        name: \"line-bot-webhook\",\n        version: \"0.1.0\"\n    });\n    await client.connect(transport);\n    globalThis.__mcpClientWebhook = client;\n    return client;\n}\nfunction verifyLineSignature(rawBody, signature) {\n    try {\n        const secret = process.env.CHANNEL_SECRET || \"\";\n        if (!secret || !signature) return false;\n        const hmac = crypto__WEBPACK_IMPORTED_MODULE_0___default().createHmac(\"sha256\", secret);\n        hmac.update(rawBody);\n        const digest = hmac.digest(\"base64\");\n        return crypto__WEBPACK_IMPORTED_MODULE_0___default().timingSafeEqual(Buffer.from(digest), Buffer.from(signature));\n    } catch  {\n        return false;\n    }\n}\nasync function POST(req) {\n    try {\n        const signature = req.headers.get(\"x-line-signature\");\n        const raw = await req.text();\n        const disableVerify = String(process.env.DISABLE_LINE_SIGNATURE_VERIFY || \"\").toLowerCase() === \"true\";\n        if (!disableVerify && !verifyLineSignature(raw, signature)) {\n            return new Response(JSON.stringify({\n                error: \"invalid signature\"\n            }), {\n                status: 401,\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        }\n        const body = JSON.parse(raw);\n        const events = Array.isArray(body?.events) ? body.events : [];\n        const client = await getClient();\n        if (!globalThis.__userPrefs) globalThis.__userPrefs = new Map();\n        const prefs = globalThis.__userPrefs;\n        for (const ev of events){\n            const userId = ev?.source?.userId || \"\";\n            if (ev?.type === \"message\" && ev?.message?.type === \"text\") {\n                let text = ev.message.text || \"\";\n                const dest = userId || process.env.DESTINATION_USER_ID || \"\";\n                let t = text.toLowerCase();\n                if (t.includes(\"login db\")) {\n                    if (userId) prefs.set(userId, {\n                        knowledgeSource: \"mssql\"\n                    });\n                    try {\n                        await client.callTool({\n                            name: \"push_text_message\",\n                            arguments: {\n                                userId,\n                                message: {\n                                    type: \"text\",\n                                    text: \"เชื่อมต่อฐานข้อมูล (MSSQL) สำหรับโหมดถาม/ตอบแล้ว\"\n                                }\n                            }\n                        });\n                    } catch  {}\n                    continue;\n                }\n                if (t.includes(\"logout db\")) {\n                    if (userId) prefs.set(userId, {\n                        knowledgeSource: \"file\"\n                    });\n                    try {\n                        await client.callTool({\n                            name: \"push_text_message\",\n                            arguments: {\n                                userId,\n                                message: {\n                                    type: \"text\",\n                                    text: \"ยกเลิกโหมดฐานข้อมูล ใช้ไฟล์ความรู้แทน\"\n                                }\n                            }\n                        });\n                    } catch  {}\n                    continue;\n                }\n                const pref = userId && prefs.get(userId) || {\n                    knowledgeSource: \"file\"\n                };\n                const knowledgeSource = pref.knowledgeSource;\n                // Heuristic: remember explicit table mentions and support pronoun \"ตารางนี้/table นี้/this table\"\n                const explicitTableMatch = t.match(/(?:table|จาก|เข้าไป|ไป|from)\\s+([a-z0-9_\\.]+)/i);\n                if (explicitTableMatch && explicitTableMatch[1] && userId) {\n                    const raw = explicitTableMatch[1];\n                    const full = raw.includes(\".\") ? raw : `dbo.${raw}`;\n                    prefs.set(userId, {\n                        ...pref,\n                        lastTable: full\n                    });\n                }\n                if (/(ตารางนี้|table\\s*นี้|this\\s*table)/i.test(text) && pref.lastTable) {\n                    text = text.replace(/ตารางนี้|table\\s*นี้|this\\s*table/gi, pref.lastTable);\n                    t = text.toLowerCase();\n                }\n                if (knowledgeSource === \"mssql\" && /(ทั้งหมดกี่รายการ|มีกี่รายการ|count\\s*(all)?)/i.test(text)) {\n                    if (pref.lastTable) {\n                        try {\n                            const q = await client.callTool({\n                                name: \"query_mssql\",\n                                arguments: {\n                                    sql: `SELECT COUNT(1) AS total_count FROM ${pref.lastTable}`,\n                                    limit: 1\n                                }\n                            });\n                            const parsed = JSON.parse(q.content?.[0]?.text || \"{}\");\n                            const rows = Array.isArray(parsed?.rows) ? parsed.rows : [];\n                            const cnt = rows[0]?.total_count ?? pref.lastRowCount ?? 0;\n                            const msg = `ทั้งหมด ${cnt} รายการ (จาก ${pref.lastTable})`;\n                            await client.callTool({\n                                name: \"push_text_message\",\n                                arguments: {\n                                    userId: dest,\n                                    message: {\n                                        type: \"text\",\n                                        text: msg\n                                    }\n                                }\n                            });\n                            continue;\n                        } catch  {\n                        // ignore and fall through\n                        }\n                    }\n                }\n                // 2) Ask which table?\n                if (knowledgeSource === \"mssql\" && /(จากตารางไหน|what\\s*table)/i.test(text)) {\n                    const msg = pref.lastTable ? `จากตาราง ${pref.lastTable}` : \"ยังไม่ทราบตาราง (โปรดระบุ)\";\n                    try {\n                        await client.callTool({\n                            name: \"push_text_message\",\n                            arguments: {\n                                userId: dest,\n                                message: {\n                                    type: \"text\",\n                                    text: msg\n                                }\n                            }\n                        });\n                        continue;\n                    } catch  {}\n                }\n                // If user asks for all tables summary\n                if (knowledgeSource === \"mssql\" && /(แสดงข้อมูล.*ตาราง.*ทั้งหมด|แสดงข้อมูลแต่ละ\\s*ตาราง|ทุก\\s*ตาราง)/i.test(text)) {\n                    try {\n                        // Use MCP tool query_mssql to fetch table list\n                        const q = await client.callTool({\n                            name: \"query_mssql\",\n                            arguments: {\n                                sql: \"SELECT TOP 50 s.name AS schema_name, t.name AS table_name FROM sys.tables t JOIN sys.schemas s ON t.schema_id = s.schema_id WHERE t.is_ms_shipped = 0 ORDER BY s.name, t.name\",\n                                limit: 50\n                            }\n                        });\n                        const parsed = JSON.parse(q.content?.[0]?.text || \"{}\");\n                        const rows = Array.isArray(parsed?.rows) ? parsed.rows : [];\n                        const out = rows.map((r)=>`- ${r.schema_name}.${r.table_name}`).slice(0, 50).join(\"\\n\");\n                        const textMsg = out || \"(ไม่พบตาราง)\";\n                        await client.callTool({\n                            name: \"push_text_message\",\n                            arguments: {\n                                userId,\n                                message: {\n                                    type: \"text\",\n                                    text: textMsg\n                                }\n                            }\n                        });\n                        continue;\n                    } catch  {}\n                }\n                // If user says \"แสดงมา/โชว์หน่อย/เอามา\" and we have lastTable (+ optional lastLimit)\n                if (knowledgeSource === \"mssql\" && /(แสดงมา|โชว์หน่อย|เอามา)/i.test(text) && pref.lastTable) {\n                    const lim = pref.lastLimit && pref.lastLimit > 0 ? pref.lastLimit : 10;\n                    text = `เข้าไป ${pref.lastTable} แสดง${lim} ข้อมูล`;\n                    t = text.toLowerCase();\n                }\n                // If user says \"แสดง {N} (รายการ|แถว)\" and we have lastTable, rewrite\n                const mShowN = t.match(/แสดง(?:ข้อมูล)?\\s*(\\d{1,4})\\s*(?:รายการ|แถว)?/i);\n                if (knowledgeSource === \"mssql\" && mShowN && pref.lastTable) {\n                    const lim = parseInt(mShowN[1], 10);\n                    text = `เข้าไป ${pref.lastTable} แสดง${lim} ข้อมูล`;\n                    prefs.set(userId, {\n                        ...pref,\n                        lastLimit: lim\n                    });\n                }\n                // Try AI-driven SQL first when using DB knowledge\n                if (knowledgeSource === \"mssql\") {\n                    try {\n                        const q = await client.callTool({\n                            name: \"ai_query_mssql\",\n                            arguments: {\n                                instruction: text,\n                                maxRows: 10,\n                                allowedTables: pref.lastTable ? [\n                                    pref.lastTable\n                                ] : undefined\n                            }\n                        });\n                        const raw = q?.content?.[0]?.text || \"\";\n                        try {\n                            const payload = raw ? JSON.parse(raw) : null;\n                            if (payload && Array.isArray(payload.rows)) {\n                                const rows = payload.rows;\n                                const cols = Array.isArray(payload.columns) ? payload.columns : rows[0] ? Object.keys(rows[0]) : [];\n                                const previewCols = cols.slice(0, 3);\n                                const head = `ผลลัพธ์ ${Math.min(rows.length, 10)} / ${payload.rowCount ?? rows.length} แถว`;\n                                const body = rows.slice(0, 10).map((r, i)=>`${i + 1}. ${previewCols.map((c)=>`${c}: ${String(r[c] ?? \"\")}`).join(\", \")}`).join(\"\\n\");\n                                const txt = [\n                                    head,\n                                    body\n                                ].filter(Boolean).join(\"\\n\").slice(0, 2000);\n                                await client.callTool({\n                                    name: \"push_text_message\",\n                                    arguments: {\n                                        userId: dest,\n                                        message: {\n                                            type: \"text\",\n                                            text: txt\n                                        }\n                                    }\n                                });\n                                // Try to extract table name from SQL and store context\n                                try {\n                                    const sql = String(payload.sql || \"\");\n                                    const mFrom = sql.match(/from\\s+([a-z0-9_\\.]+)/i);\n                                    const tbl = mFrom && mFrom[1] ? mFrom[1] : pref.lastTable;\n                                    const newPref = {\n                                        ...pref,\n                                        lastTable: tbl,\n                                        lastLimit: 10,\n                                        lastRowCount: payload.rowCount ?? rows.length\n                                    };\n                                    if (userId) prefs.set(userId, newPref);\n                                } catch  {}\n                                continue;\n                            }\n                        } catch  {\n                        // parsing failed; fall back below\n                        }\n                    } catch  {\n                    // ai_query_mssql failed; fall back below\n                    }\n                }\n                const args = {\n                    instruction: text,\n                    model: \"gemini-2.0-flash\",\n                    mode: \"auto\",\n                    userId: dest,\n                    knowledgeSource\n                };\n                if (knowledgeSource === \"file\") {\n                    const defaultKnowledge = process.env.DEFAULT_KNOWLEDGE_FILE || \"docs/data-learning/knowledge.md\";\n                    args.filePath = defaultKnowledge;\n                }\n                try {\n                    await client.callTool({\n                        name: \"gemini_command\",\n                        arguments: args\n                    });\n                } catch (e) {\n                // swallow to not break webhook pipeline\n                }\n            }\n        }\n        return new Response(JSON.stringify({\n            ok: true\n        }), {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    } catch (e) {\n        return new Response(JSON.stringify({\n            error: e?.message || String(e)\n        }), {\n            status: 500,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/line-webhook/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/ajv","vendor-chunks/zod","vendor-chunks/next","vendor-chunks/@modelcontextprotocol","vendor-chunks/uri-js","vendor-chunks/cross-spawn","vendor-chunks/which","vendor-chunks/isexe","vendor-chunks/json-schema-traverse","vendor-chunks/fast-json-stable-stringify","vendor-chunks/fast-deep-equal","vendor-chunks/path-key","vendor-chunks/shebang-command","vendor-chunks/shebang-regex"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fline-webhook%2Froute&page=%2Fapi%2Fline-webhook%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fline-webhook%2Froute.ts&appDir=D%3A%5Cfame%5Cnon-project%5Cline-bot-mcp-server%5Cui-next%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Cfame%5Cnon-project%5Cline-bot-mcp-server%5Cui-next&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();